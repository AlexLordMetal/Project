@model ServicesApp.ViewModels.ViewModels.OrderViewModelCreate
@using System.Globalization
@{
    ViewBag.Title = "Create Order";
}

<h3>Service Provider</h3>
<div class="row">
    <div class="col-sm-3 col-lg-3 fix-height-150">
        @if (Model.ServiceProviderService.Photo != null)
        {
            <img src=@Model.ServiceProviderService.Photo.Url class="img-rounded img-responsive img-height-100" />
        }
        else
        {
            <img src="~/Content/DataImages/NoImage.png" class="img-rounded img-responsive img-height-150" />
        }
    </div>
    <div class="col-sm-9 col-lg-9">
        <div>
            <dl class="dl-horizontal">

                <dt>
                    @Html.DisplayNameFor(model => model.ServiceProviderService.Service.Name)
                </dt>

                <dd>
                    <a href="" data-toggle="modal" data-target="#descService">@Html.DisplayFor(model => model.ServiceProviderService.Service.Name)</a>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ServiceProviderService.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ServiceProviderService.Description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ServiceProviderService.ServicePrice)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ServiceProviderService.ServicePrice)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ServiceProviderService.ServiceProvider.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ServiceProviderService.ServiceProvider.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ServiceProviderService.ServiceProvider.ConfirmDocs)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ServiceProviderService.ServiceProvider.ConfirmDocs)
                </dd>

                @if (Model.ServiceProviderService.AvgRating != null)
                {
                    <dt>
                        @Html.DisplayNameFor(model => model.ServiceProviderService.AvgRating)
                    </dt>

                    <dd>
                        <input id="star-rating" value="@Model.ServiceProviderService.AvgRating.Value.ToString(CultureInfo.InvariantCulture)"  class="rating" type="text" data-size="xs" data-show-clear="false" data-show-caption="false">
                    </dd>
                }
            </dl>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <h3>@ViewBag.Title</h3>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control date-picker", @readonly = "readonly", @Value = Model.OrderDate.ToString("dd.MM.yyyy") } })
                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create order" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<div id="descService" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Service</h3>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-4 col-lg-4 fix-height-300">
                        @if (Model.ServiceProviderService.Service.Photo != null)
                        {
                            <img src=@Model.ServiceProviderService.Service.Photo.Url class="img-rounded img-responsive img-height-300" />
                        }
                        else
                        {
                            <img src="~/Content/DataImages/NoImage.png" class="img-rounded img-responsive img-height-300" />
                        }
                    </div>
                    <div class="col-sm-8 col-lg-8">
                        <div>
                            <dl class="dl-horizontal">

                                <dt>
                                    @Html.DisplayNameFor(model => model.ServiceProviderService.Service.Name)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => model.ServiceProviderService.Service.Name)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => model.ServiceProviderService.Service.Category)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => model.ServiceProviderService.Service.Category)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => model.ServiceProviderService.Service.Description)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => model.ServiceProviderService.Service.Description)
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('.date-picker').datepicker({
            beforeShowDay: function (date) {
                var array = ('@Html.Raw(Model.ExcludedDates)');
                var string = jQuery.datepicker.formatDate('yy-mm-dd', date);
                return [array.indexOf(string) == -1]
            },
            minDate: +1,
            maxDate: "+2M",
            dateFormat: "dd.mm.yy"
        });
    })
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#star-rating').rating({ displayOnly: true, step: 0.1 });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/star-rating")
}